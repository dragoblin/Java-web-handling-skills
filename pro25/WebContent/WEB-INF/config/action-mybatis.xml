<?xml version="1.0" encoding="UTF-8"?>
<beans xsi:schemaLocation="http://www.springframework.org/schema/beans 
						   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
						   http://www.springframework.org/schema/context 
						   http://www.springframework.org/schema/context/spring-context.xsd 
						   http://www.springframework.org/schema/tx 
						   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
 	   xmlns:tx="http://www.springframework.org/schema/tx" 
 	   xmlns:context="http://www.springframework.org/schema/context"
 	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
 	   xmlns="http://www.springframework.org/schema/beans">
	
	<!-- PropertyPlaceholderConfigurer 클래스를 이용해 데이터베이스 설정 관련 정보를
		 jdbc.properties 파일에서 읽어 들임 -->
	<bean id="propertyPlaceholderConfigurer"
		  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>/WEB-INF/config/jdbc.properties</value>
		</property>
	</bean>
	
	<!-- 마이바티스에서 제공하는 PooledDataSource 클래스를 이용해서 dataSource 빈을 생성 -->
 	<bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource">
		<property name="driver" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- SqlSessionFactoryBean 클래스를 이용해 dataSource 속성에 dataSource 빈을 설정 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		
		<!-- mapperLocations 속성에 mybatis/mappers 패키지의 모든 매퍼 파일들을 읽어 들여와 설정 -->
		<property name="mapperLocations" value="classpath:mybatis/mappers/*.xml"/>
		
	</bean>
	
	<!-- SqlSessionTemplate 클래스를 이용해 sqlSession 빈을 생성 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<!-- sqlSession 빈을 accDAO 빈 속성에 주입 -->
	<bean id="accDAO" class="com.spring.account.AccountDAO">
      	<property name="sqlSession" ref="sqlSession" />
	</bean>
	
	<!-- DataSourceTransactionManager 클래스를 이용해 dataSource 빈에 트랜잭션을 적용 -->
	<bean id="txManager"  
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- 애너테이션을 사용하여 트랜잭션을 적용하기 위해 txManager 빈을 설정 --> 
	<tx:annotation-driven transaction-manager="txManager" /> 

</beans>